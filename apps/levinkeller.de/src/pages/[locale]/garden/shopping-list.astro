---
import Layout from '@shipyard/base/layouts/Page.astro'
import type { GetStaticPaths } from 'astro'
import { prop, groupBy, indexBy, mapObjIndexed } from 'ramda'
import { pipe } from 'fp-ts/lib/function'
import { getCollection } from 'astro:content'
export const getStaticPaths = (() => {
  return [
    {
      params: {
        locale: 'de',
      },
    },
  ]
}) satisfies GetStaticPaths

const outOfStock = ({ data: { inStock } }: { data: { inStock: boolean } }) =>
  !inStock

const vegetables = await getCollection('vegetables', outOfStock).then(
  (vegetables) =>
    vegetables.map(
      ({
        id,
        data: {
          supplier: { id: supplierId },
          name: { common: name },
        },
      }) => ({ supplierId, name, link: `./vegetables/${id}` }),
    ),
)

const plants = await getCollection('plants', outOfStock).then((plants) =>
  plants.map(
    ({
      id,
      data: {
        supplier: { id: supplierId },
        name: { german: name },
      },
    }) => ({ supplierId, name, link: `./plants/${id}` }),
  ),
)
const suppliers = await getCollection('suppliers').then(indexBy(prop('id')))
const vegBySupplier = pipe(
  vegetables.concat(plants),
  // @ts-expect-error
  groupBy(prop('supplierId')),
  mapObjIndexed((vegetables, supplierId) => ({
    supplierName: suppliers[supplierId].data.name,
    vegetables,
  })),
)
---

<Layout>
  <div class="container mx-auto">
    <h1 class="m-4 text-center text-xl">Einkaufsliste</h1>
    <table class="table">
      <thead>
        <tr>
          {
            Object.values(vegBySupplier).map(({ supplierName }) => (
              <th>{supplierName}</th>
            ))
          }
        </tr>
      </thead>
      <tbody>
        {
          Object.values(vegBySupplier).map(({ vegetables }) => (
            <td class="align-top">
              <ul class="list-inside list-disc">
                {vegetables!.map(({ name, link }) => (
                  <li>
                    <a href={link}>{name}</a>
                  </li>
                ))}
              </ul>
            </td>
          ))
        }
      </tbody>
    </table>
  </div>
</Layout>
